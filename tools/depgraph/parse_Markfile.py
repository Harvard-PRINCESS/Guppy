# ASSUMES EXISTENCE OF MARKFILE THAT IS
# GENERATED BY HAKE/MAIN.HS FROM THE SAME COMMIT.
# CREATES deps.txt with alternating lines:
#     TARGET
#     DEPENDENCY

# THIS SCRIPT ALSO CREATES A DATABASE OF 
# DEPENDENCY INFO CALLED TARGET_DEPENDENCIES.DB
# IMPORTANT: DUE TO A FEATURE OF SQLITE, THIS SCRIPT
# DOES NOT OVERWRITE AN EXISTING DATABASE BY DEFAULT.
# DELETE THE DATABASE IF IT ALREADY EXISTS BEFORE RUNNING
# THIS SCRIPT TO AVOID DUPLICATION PROBLEMS
# TODO: EXEC AN RM OF THE DATABASE FILE AT BEGINNING OF SCRIPT

import sys
import SQLFUNCS as sql

def clean(s):
    s = s.strip("")
    s = s.strip("")
    return s

lines = None
CUR_LINE = 0
target_deps = {}

with open("Markfile", "r") as f:
    lines = f.readlines()
NUM_LINES = len(lines)

while CUR_LINE < NUM_LINES-1:
    assert "OUTPUTS" in lines[CUR_LINE]

    output = clean(lines[CUR_LINE+1])
    deps = clean(lines[CUR_LINE+4])
    predeps = clean(lines[CUR_LINE+7])

    key = output
    val = filter(None,[deps,predeps])
    val = [item for segments in val for item in segments.split()]
    target_deps[key] = val
    CUR_LINE += 9


with open('deps.txt', 'w') as f:
    
    # CREATE SQL DATABASE
    sql_create_tds_table = """ CREATE TABLE IF NOT EXISTS tds (
                               id integer PRIMARY KEY,
                               target text NOT NULL,
                               dependencies text
                           ); """
    
    db_name = "target_dependencies.db"
    sql.create_db(db_name)
    conn = sql.make_connection(db_name)
    sql.create_table(conn,sql_create_tds_table)
    sql.get_all_tables(conn)

    for tar,deps in target_deps.iteritems():
             
        comma_sep_dep_string = ','.join(deps)
        tmp = (tar,comma_sep_dep_string)
        ret = sql.insert_td(conn,tmp)
        print ret
        # write deps.txt
        f.write(tar+'\n')
        f.write(comma_sep_dep_string+'\n')
        f.write('\n')
    
    sql.get_tds(conn)
    conn.commit()
    conn.close()
