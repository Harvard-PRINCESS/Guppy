-- Hakefile for /tools/alewife
--
----------------------------------------------------------------------

[ Rule ([
    Str "ocamlbuild hamparser.byte" ,
    Str "-I", NoDep SrcTree "tools" ".",
    Str "-install-lib-dir", NoDep BuildTree "tools" ".",
    Str "-install-bin-dir", NoDep BuildTree "tools" "."
]) ]

-- [ Rule ([
--     Str "ocamlbuild",
--     Str "-I", BuildTree "tools" "alewife",
--     Str "-install-lib-dir", NoDep BuildTree "tools" ".",
-- ]) ]
-- 
-- Rule ([ Str "make native" ]) ]
-- 
-- Rules [ Rule [In InstallTree "tools" "/bin/hamlet",
--                     In SrcTree "src" (file++".hl"),
--                     Out arch hfile,
--                     Out arch cfile,
--                     Out arch usercfile ],
--               compileGeneratedCFile opts usercfile,
--               Rule (archive opts [ ofile ] [] nfile afile)
--          ]
-- 
-- compileHaskell prog main deps = compileHaskellWithLibs prog main deps []
-- compileHaskellWithLibs prog main deps dirs =
--   let
--     tools_dir = (Dep InstallTree "tools" "/tools/.marker")
--   in
--     Rule ([ NStr "ghc -i",
--             NoDep SrcTree "src" ".",
--             Str "-odir ", NoDep BuildTree "tools" ".",
--             Str "-hidir ", NoDep BuildTree "tools" ".",
--             Str "-rtsopts=all",
--             Str "--make ",
--             In SrcTree "src" main,
--             Str "-o ",
--             Out "tools" ("/bin" </> prog),
--             Str "$(LDFLAGS)" ]
--           ++ concat [[ NStr "-i", NoDep SrcTree "src" d] | d <- dirs]
--           ++ [ (Dep SrcTree "src" dep) | dep <- deps ]
--           ++ [ tools_dir ])
